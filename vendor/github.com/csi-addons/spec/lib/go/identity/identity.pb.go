// Code generated by make; DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: identity/identity.proto

package identity

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Type describes a CSI Service that CSI-drivers can support.
type Capability_Service_Type int32

const (
	// UNKNOWN indicates that the CSI-driver does not neither provide the CSI
	// ControllerService or CSI NodeService. The CSI-Addons CO plugin will
	// most likely ignore the node providing this Identity Service.
	Capability_Service_UNKNOWN Capability_Service_Type = 0
	// CONTROLLER_SERVICE indicates that the CSI-driver provides RPCs for the
	// CSI ControllerService.
	// The presence of this capability determines whether the CSI-Addons CO
	// plugin can invoke RPCs that require access to the storage system,
	// similar to the CSI Controller (provisioner).
	Capability_Service_CONTROLLER_SERVICE Capability_Service_Type = 1
	// NODE_SERVICE indicates that the CSI-driver provides RPCs for the CSI
	// NodeService.
	// The presence of this capability determines whether the CSI-Addons CO
	// plugin can invoke RPCs that require a volume to be staged/attached to
	// the node.
	Capability_Service_NODE_SERVICE Capability_Service_Type = 2
)

// Enum value maps for Capability_Service_Type.
var (
	Capability_Service_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "CONTROLLER_SERVICE",
		2: "NODE_SERVICE",
	}
	Capability_Service_Type_value = map[string]int32{
		"UNKNOWN":            0,
		"CONTROLLER_SERVICE": 1,
		"NODE_SERVICE":       2,
	}
)

func (x Capability_Service_Type) Enum() *Capability_Service_Type {
	p := new(Capability_Service_Type)
	*p = x
	return p
}

func (x Capability_Service_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Capability_Service_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_identity_identity_proto_enumTypes[0].Descriptor()
}

func (Capability_Service_Type) Type() protoreflect.EnumType {
	return &file_identity_identity_proto_enumTypes[0]
}

func (x Capability_Service_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Capability_Service_Type.Descriptor instead.
func (Capability_Service_Type) EnumDescriptor() ([]byte, []int) {
	return file_identity_identity_proto_rawDescGZIP(), []int{4, 0, 0}
}

// Type describes a CSI Service that CSI-drivers can support.
type Capability_ReclaimSpace_Type int32

const (
	// UNKNOWN indicates that the CSI-driver does not support the ReclaimSpace
	// operation in the current mode. The CSI-driver may be able to support
	// the operation when is it configured differently. The CSI-Addons CO
	// plugin will most likely ignore this node for the ReclaimSpace
	// operation.
	Capability_ReclaimSpace_UNKNOWN Capability_ReclaimSpace_Type = 0
	// OFFLINE indicates that the CSI-driver provides RPCs for an offline
	// ReclaimSpace operation.
	// The presence of this capability determines whether the CSI-Addons CO
	// plugin can invoke RPCs that require access to the storage system,
	// similar to the CSI Controller (provisioner).
	Capability_ReclaimSpace_OFFLINE Capability_ReclaimSpace_Type = 1
	// ONLINE indicates that the CSI-driver provides RPCs for an online
	// ReclaimSpace operation.
	// The presence of this capability determines whether the CSI-Addons CO
	// plugin can invoke RPCs that require a volume to be staged/attached to
	// the node.
	Capability_ReclaimSpace_ONLINE Capability_ReclaimSpace_Type = 2
)

// Enum value maps for Capability_ReclaimSpace_Type.
var (
	Capability_ReclaimSpace_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "OFFLINE",
		2: "ONLINE",
	}
	Capability_ReclaimSpace_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"OFFLINE": 1,
		"ONLINE":  2,
	}
)

func (x Capability_ReclaimSpace_Type) Enum() *Capability_ReclaimSpace_Type {
	p := new(Capability_ReclaimSpace_Type)
	*p = x
	return p
}

func (x Capability_ReclaimSpace_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Capability_ReclaimSpace_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_identity_identity_proto_enumTypes[1].Descriptor()
}

func (Capability_ReclaimSpace_Type) Type() protoreflect.EnumType {
	return &file_identity_identity_proto_enumTypes[1]
}

func (x Capability_ReclaimSpace_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Capability_ReclaimSpace_Type.Descriptor instead.
func (Capability_ReclaimSpace_Type) EnumDescriptor() ([]byte, []int) {
	return file_identity_identity_proto_rawDescGZIP(), []int{4, 1, 0}
}

// GetIdentityRequest is sent by the CSI-Addons CO plugin to obtain the
// drivername, version and optional details from the CSI-driver.
type GetIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetIdentityRequest) Reset() {
	*x = GetIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_identity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityRequest) ProtoMessage() {}

func (x *GetIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_identity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityRequest.ProtoReflect.Descriptor instead.
func (*GetIdentityRequest) Descriptor() ([]byte, []int) {
	return file_identity_identity_proto_rawDescGZIP(), []int{0}
}

// GetIdentityResponse is returned by the CSI-driver as a response to a
// GetIdentityRequest.
type GetIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name MUST follow domain name notation format
	// (https://tools.ietf.org/html/rfc1035#section-2.3.1). It SHOULD include
	// the CSI-drivers's host company name and the CSI-driver name, to minimize
	// the possibility of collisions. It MUST be 63 characters or less, beginning
	// and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-),
	// dots (.), and alphanumerics between. This field is REQUIRED.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// This field is REQUIRED. Value of this field is opaque to the CO.
	VendorVersion string `protobuf:"bytes,2,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
	// This field is OPTIONAL. Values are opaque to the CO.
	Manifest map[string]string `protobuf:"bytes,3,rep,name=manifest,proto3" json:"manifest,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetIdentityResponse) Reset() {
	*x = GetIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_identity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityResponse) ProtoMessage() {}

func (x *GetIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_identity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityResponse.ProtoReflect.Descriptor instead.
func (*GetIdentityResponse) Descriptor() ([]byte, []int) {
	return file_identity_identity_proto_rawDescGZIP(), []int{1}
}

func (x *GetIdentityResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetIdentityResponse) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

func (x *GetIdentityResponse) GetManifest() map[string]string {
	if x != nil {
		return x.Manifest
	}
	return nil
}

// GetCapabilitiesRequest is sent by the CSI-Addons CO plugin to detect the
// features that a CSI-driver supports.
type GetCapabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCapabilitiesRequest) Reset() {
	*x = GetCapabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_identity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCapabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCapabilitiesRequest) ProtoMessage() {}

func (x *GetCapabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_identity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCapabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetCapabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_identity_identity_proto_rawDescGZIP(), []int{2}
}

// GetCapabilitiesResponse is returned by the CSI-driver as a response to a
// GetCapabilitiesRequest.
type GetCapabilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// All the capabilities that the controller service supports. This
	// field is OPTIONAL.
	Capabilities []*Capability `protobuf:"bytes,1,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
}

func (x *GetCapabilitiesResponse) Reset() {
	*x = GetCapabilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_identity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCapabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCapabilitiesResponse) ProtoMessage() {}

func (x *GetCapabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_identity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCapabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetCapabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_identity_identity_proto_rawDescGZIP(), []int{3}
}

func (x *GetCapabilitiesResponse) GetCapabilities() []*Capability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

// Specifies one or more capabilities of the CSI-driver.
type Capability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Capability_Service_
	//	*Capability_ReclaimSpace_
	Type isCapability_Type `protobuf_oneof:"type"`
}

func (x *Capability) Reset() {
	*x = Capability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_identity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Capability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capability) ProtoMessage() {}

func (x *Capability) ProtoReflect() protoreflect.Message {
	mi := &file_identity_identity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capability.ProtoReflect.Descriptor instead.
func (*Capability) Descriptor() ([]byte, []int) {
	return file_identity_identity_proto_rawDescGZIP(), []int{4}
}

func (m *Capability) GetType() isCapability_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Capability) GetService() *Capability_Service {
	if x, ok := x.GetType().(*Capability_Service_); ok {
		return x.Service
	}
	return nil
}

func (x *Capability) GetReclaimSpace() *Capability_ReclaimSpace {
	if x, ok := x.GetType().(*Capability_ReclaimSpace_); ok {
		return x.ReclaimSpace
	}
	return nil
}

type isCapability_Type interface {
	isCapability_Type()
}

type Capability_Service_ struct {
	// Service or operation that the CSI-driver supports.
	Service *Capability_Service `protobuf:"bytes,1,opt,name=service,proto3,oneof"`
}

type Capability_ReclaimSpace_ struct {
	// ReclaimSpace operation capabilities.
	ReclaimSpace *Capability_ReclaimSpace `protobuf:"bytes,2,opt,name=reclaim_space,json=reclaimSpace,proto3,oneof"`
}

func (*Capability_Service_) isCapability_Type() {}

func (*Capability_ReclaimSpace_) isCapability_Type() {}

// ProbeRequest is sent to the CSI-driver to confirm that it can respond to
// requests from the CSI-Addons CO plugin.
type ProbeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProbeRequest) Reset() {
	*x = ProbeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_identity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeRequest) ProtoMessage() {}

func (x *ProbeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_identity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeRequest.ProtoReflect.Descriptor instead.
func (*ProbeRequest) Descriptor() ([]byte, []int) {
	return file_identity_identity_proto_rawDescGZIP(), []int{5}
}

// ProbeResponse is returned by the CSI-driver as a response to a ProbeRequest.
type ProbeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Readiness allows a CSI-driver to report its initialization status back
	// to the CSI-Addons CO plugin. Initialization for some CSI-drivers MAY be
	// time consuming and it is important for a CO to distinguish between the
	// following cases:
	//
	// 1) The CSI-driver is in an unhealthy state and MAY need restarting. In
	//    this case a gRPC error code SHALL be returned.
	// 2) The CSI-driver is still initializing, but is otherwise perfectly
	//    healthy. In this case a successful response SHALL be returned
	//    with a readiness value of `false`. Calls to the CSI-driver's
	//    Controller and/or Node services MAY fail due to an incomplete
	//    initialization state.
	// 3) The CSI-driver has finished initializing and is ready to service
	//    calls to its Controller and/or Node services. A successful
	//    response is returned with a readiness value of `true`.
	//
	// This field is OPTIONAL. If not present, the caller SHALL assume
	// that the CSI-driver is in a ready state and is accepting calls to its
	// Controller and/or Node services (according to the CSI-driver's reported
	// capabilities).
	Ready *wrapperspb.BoolValue `protobuf:"bytes,1,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *ProbeResponse) Reset() {
	*x = ProbeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_identity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeResponse) ProtoMessage() {}

func (x *ProbeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_identity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeResponse.ProtoReflect.Descriptor instead.
func (*ProbeResponse) Descriptor() ([]byte, []int) {
	return file_identity_identity_proto_rawDescGZIP(), []int{6}
}

func (x *ProbeResponse) GetReady() *wrapperspb.BoolValue {
	if x != nil {
		return x.Ready
	}
	return nil
}

// Service contains the type of CSI Service that the CSI-driver provides.
type Capability_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type contains the Type of CSI Service that the CSI-driver supports.
	Type Capability_Service_Type `protobuf:"varint,1,opt,name=type,proto3,enum=identity.Capability_Service_Type" json:"type,omitempty"`
}

func (x *Capability_Service) Reset() {
	*x = Capability_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_identity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Capability_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capability_Service) ProtoMessage() {}

func (x *Capability_Service) ProtoReflect() protoreflect.Message {
	mi := &file_identity_identity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capability_Service.ProtoReflect.Descriptor instead.
func (*Capability_Service) Descriptor() ([]byte, []int) {
	return file_identity_identity_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Capability_Service) GetType() Capability_Service_Type {
	if x != nil {
		return x.Type
	}
	return Capability_Service_UNKNOWN
}

// ReclaimSpace contains the features of the ReclaimSpace operation that the
// CSI-driver supports.
type Capability_ReclaimSpace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type contains the Type of CSI Service that the CSI-driver supports.
	Type Capability_ReclaimSpace_Type `protobuf:"varint,1,opt,name=type,proto3,enum=identity.Capability_ReclaimSpace_Type" json:"type,omitempty"`
}

func (x *Capability_ReclaimSpace) Reset() {
	*x = Capability_ReclaimSpace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_identity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Capability_ReclaimSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capability_ReclaimSpace) ProtoMessage() {}

func (x *Capability_ReclaimSpace) ProtoReflect() protoreflect.Message {
	mi := &file_identity_identity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capability_ReclaimSpace.ProtoReflect.Descriptor instead.
func (*Capability_ReclaimSpace) Descriptor() ([]byte, []int) {
	return file_identity_identity_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Capability_ReclaimSpace) GetType() Capability_ReclaimSpace_Type {
	if x != nil {
		return x.Type
	}
	return Capability_ReclaimSpace_UNKNOWN
}

var File_identity_identity_proto protoreflect.FileDescriptor

var file_identity_identity_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x08,
	0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x22, 0x93, 0x03, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x38, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x72, 0x65,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x1a, 0x7f, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43,
	0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x10, 0x02, 0x1a, 0x78, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x2c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x42,
	0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x62, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x62, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x32, 0xee, 0x01, 0x0a, 0x08, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x16, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e,
	0x3b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_identity_identity_proto_rawDescOnce sync.Once
	file_identity_identity_proto_rawDescData = file_identity_identity_proto_rawDesc
)

func file_identity_identity_proto_rawDescGZIP() []byte {
	file_identity_identity_proto_rawDescOnce.Do(func() {
		file_identity_identity_proto_rawDescData = protoimpl.X.CompressGZIP(file_identity_identity_proto_rawDescData)
	})
	return file_identity_identity_proto_rawDescData
}

var file_identity_identity_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_identity_identity_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_identity_identity_proto_goTypes = []interface{}{
	(Capability_Service_Type)(0),      // 0: identity.Capability.Service.Type
	(Capability_ReclaimSpace_Type)(0), // 1: identity.Capability.ReclaimSpace.Type
	(*GetIdentityRequest)(nil),        // 2: identity.GetIdentityRequest
	(*GetIdentityResponse)(nil),       // 3: identity.GetIdentityResponse
	(*GetCapabilitiesRequest)(nil),    // 4: identity.GetCapabilitiesRequest
	(*GetCapabilitiesResponse)(nil),   // 5: identity.GetCapabilitiesResponse
	(*Capability)(nil),                // 6: identity.Capability
	(*ProbeRequest)(nil),              // 7: identity.ProbeRequest
	(*ProbeResponse)(nil),             // 8: identity.ProbeResponse
	nil,                               // 9: identity.GetIdentityResponse.ManifestEntry
	(*Capability_Service)(nil),        // 10: identity.Capability.Service
	(*Capability_ReclaimSpace)(nil),   // 11: identity.Capability.ReclaimSpace
	(*wrapperspb.BoolValue)(nil),      // 12: google.protobuf.BoolValue
}
var file_identity_identity_proto_depIdxs = []int32{
	9,  // 0: identity.GetIdentityResponse.manifest:type_name -> identity.GetIdentityResponse.ManifestEntry
	6,  // 1: identity.GetCapabilitiesResponse.capabilities:type_name -> identity.Capability
	10, // 2: identity.Capability.service:type_name -> identity.Capability.Service
	11, // 3: identity.Capability.reclaim_space:type_name -> identity.Capability.ReclaimSpace
	12, // 4: identity.ProbeResponse.ready:type_name -> google.protobuf.BoolValue
	0,  // 5: identity.Capability.Service.type:type_name -> identity.Capability.Service.Type
	1,  // 6: identity.Capability.ReclaimSpace.type:type_name -> identity.Capability.ReclaimSpace.Type
	2,  // 7: identity.Identity.GetIdentity:input_type -> identity.GetIdentityRequest
	4,  // 8: identity.Identity.GetCapabilities:input_type -> identity.GetCapabilitiesRequest
	7,  // 9: identity.Identity.Probe:input_type -> identity.ProbeRequest
	3,  // 10: identity.Identity.GetIdentity:output_type -> identity.GetIdentityResponse
	5,  // 11: identity.Identity.GetCapabilities:output_type -> identity.GetCapabilitiesResponse
	8,  // 12: identity.Identity.Probe:output_type -> identity.ProbeResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_identity_identity_proto_init() }
func file_identity_identity_proto_init() {
	if File_identity_identity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_identity_identity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_identity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_identity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCapabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_identity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCapabilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_identity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Capability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_identity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_identity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_identity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Capability_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_identity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Capability_ReclaimSpace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_identity_identity_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Capability_Service_)(nil),
		(*Capability_ReclaimSpace_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_identity_identity_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_identity_identity_proto_goTypes,
		DependencyIndexes: file_identity_identity_proto_depIdxs,
		EnumInfos:         file_identity_identity_proto_enumTypes,
		MessageInfos:      file_identity_identity_proto_msgTypes,
	}.Build()
	File_identity_identity_proto = out.File
	file_identity_identity_proto_rawDesc = nil
	file_identity_identity_proto_goTypes = nil
	file_identity_identity_proto_depIdxs = nil
}
